// Code generated by mockery v2.28.1. DO NOT EDIT.

package mocks

import (
	models "github.com/jh-chee/kitewave/rpc-server/models"
	mock "github.com/stretchr/testify/mock"
)

// MessageRepository is an autogenerated mock type for the MessageRepository type
type MessageRepository struct {
	mock.Mock
}

// Save provides a mock function with given fields: message
func (_m *MessageRepository) Save(message *models.Message) error {
	ret := _m.Called(message)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.Message) error); ok {
		r0 = rf(message)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewMessageRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewMessageRepository creates a new instance of MessageRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMessageRepository(t mockConstructorTestingTNewMessageRepository) *MessageRepository {
	mock := &MessageRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
